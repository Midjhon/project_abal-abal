
			S I S T E M  L O G I N  CODEIGNITER 3
			   (Codeigniter version 3.1.10)
			   
	Download codeigniternya => https://codeigniter.com/userguide3/installation/downloads.html
	                        => Cari yang versi Codeigniter v3.1.10
	
	Copy Semua folder yang ada di dalam => codeigniter-3.1.10 .zip => application,user_guide,dll.
	         => Pindahkan ke htdocs => ke folder preject kita => "mid-login"
	
	Buat folder tambahan / diluar / didlm folder project kita 'mid-login' => assets.
	
	
	Buat folder tambahan / diluar / didlm folder project kita 'mid-login' => vendor.
	        => utk simpan template sb-admin-2 nya => masukkan ke folder vendor
	
	1. Pertama-tama
	        => application=> config => config.php 
			              => $config['base_url'] = ''; => ganti jadi alamat url kita => $config['base_url'] = 'http://localhost/mid-login/';
						                                                                   ---> base_url : alamat project kita
																						   
																						   
			              => $config['index_page'] = 'index.php'; => kosongkan/hapus => $config['index_page'] = '';
						      => agar tidak perlu menulis => index.php di urlnya
							  
							  
						  => jika index.php sudah dihapus 'index.php' => setting mod_write -> .htaccess
						  
			=> buat file baru diluar / didlm folder project kita 'mid-login' -> .htaccess 			  
			   => isinya lihat di doc codeigniter -> https://codeigniter.com/userguide3/
			   
			   => search htaccess -> Codeigniter URLs -> Removing the index.php file -> copy ke .htaccess
	
	2. Masuk ke autoload.php => application/config/autoload.php ----> siapkan fitur-fitur codeigniter yang mau kita jalankan secara otomatis
	
	    => cari $autoload['libraries'] = array(); -> jalankan libraries di params array -> array('email', 'session', 'database');
																							 ---> email : aktivasi akun
																							 ---> session
																							 
																							 
		=> cari $autoload['helper'] = array(); -> jalankan helper -> array('url', 'file', 'security');
		                                                               ---> url : sbg -> base_url <-
																	   ---> file : sbg -> upload gambar <-
																	   ---> url : sbg -> enkripsi utk simpan password <-
    3. Masuk ke routes.php => application/config/routes.php
	    
		=> ganti controller defaultnya $route['default_controller'] = 'welcome'; -> $route['default_controller'] = 'auth';
	
	4. Buat controller baru => application/controller/... <--- nama controller => Auth.php
	    => isi nya => copy yang ada di controller => Welcome.php => edit beberapa
	
	5. Menjalankan fitur login => controller Auth.php
	    => di method index
		=> $this->load->view('auth/login'); -> artinya memanggil folder 'auth' -> di dlm folder 'views' -> dengan file 'login.php'
		
		=> isi 'login.php' copy dari sbadmin-2 yang ada di folder => vendor => cari --> login.php
		
	6. Ambil beberapa folder yang ada di sbadmin-2 => css,emg,js,vendor => copy ke => assets ---> mid-login/assets
	
	7. Kembali ke login.php yang ada di ---> view
	   => tambahkan di tiap href nya ---> <?= base_url('assets/'); ?>
	   => hapus '<div class="col-lg-6 d-none d-lg-block bg-login-image"></div>' => hilangkan gmabarnya
	   
	   => lebar pembungkusnya kecilin ---> <!-- Outer Row -->        <--- pembungkusnya
            <div class="row justify-content-center">
            <div class="col-lg-7">     <---- ubah ini
			
	   => agar barisnya penuh ---> <!-- Nested Row within Card Body -->    <----- isinya
                            <div class="row">
                            <div class="col-lg">        <---- jadi gini
	   => inputan emailnya ubah
	   
	Buat halaman 'registrasi.php'
	1. Siapkan database -> 'mid_login'
	2. buat 2 tabel didlmnya :
	   => user
	      => berisi field:
		        -> id
				-> name
				-> email
				-> image
				-> password
				-> role_id
				-> is_active
				-> date_ceated
	   => user_role
	            -> id
				-> role : 
				       => berisi 2 data:
					       -> Administrator
						   -> Admin
    3. ke view registrastion
	   => cari bagian 'form'
	   => lakukan validasi pada form nya => controller => method 'registrastion'
	      form_validation tidak bisa di simpan di autoload
	
	
	Pembuatan registrastion / Pendaftaran
		=> buat rules/aturannya -> $this->form_validation->set_rules('name', 'Name', 'required|trim');   <-- diambil dari name yang ada dlm inputan form => registration.php
		   
		=> buat pesan errornya --> ke view registration
		
    LOGIN 
	    => tambah validasi login => method index
		=> cek user nya ada di dlm database
	
	Menambah Halaman utk admin dan user
	    ke folder => view masing* controller
		=> ambil dari vendor=>sbadmin-2=>blank/html
		
    <!-- COPY RIGHT --->
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Mid Company <?= date('Y'); ?></span>
                    </div>
                </div>
				
 pecah tampilkan ske view templates
    -> header.php
	-> sidebar.php
	-> topbar.php
	-> footer.php
    Jadi yang di index.php => view usernya hanya contentnya
	
	---> perbaki di controller user
	
	
	Lalu buat controller admin
	 => agar jika login di arahin sesuai dgn perannya 
	 
	Menentukan perannya => admin atau member
	   => controler auth => method _login()
	      ---> cek disana / buat pengkondisian
		  // cek rolenya
					if($user['role_id'] == 1){
                        redirect('admin');
                    } else {
                        redirect('user');
                    }
					
	Membuat Menu Management ---> mengelola menu di sidebar sesuai database
	    => buat tabel 'menu' --> utk menampung data-data menu apa yang ditampilkan tiap-tiap user 
		=> buat 2 tabel :
		   ----> 'user_menu' => menentukan menu apa yang akan ditmapilkan -> admin atau member / heading
		          => masukkan/input nama menunya --> admin dan user
		   ----> 'user_sub_menu' => sub menunya ,mempermudah kelola menu
		          isi nya :
				  1. id
				  2. menu_id -> foreign key utk tabel user menu => ngikut ke menu yang mana---> user_menu
				  3. title -> dashboard, my profile
				  4. url -> menyimpan url --> agar bisa mengelola cara akses controler dan method nya
				      => misal ada sub menu baru 'edit' --> url nya 'user/edit' ==> http://localhost/mid-login/user/edit
				  5. icon -> agar gampang mengganti icon yang ada di sub menu --> dashboard, my profile,logout,dll
				  6. is_active -> kelola tanpa hapus menu nya ==> set akses menu ===> active = 1 , tidak aktif = 0
        => masukan/input data sub menu nya => utk admin => dan user
		
		=> buat lagi 1 tabel => utk menggabungkan ketiga tabel ---> user_menu, user_role, user_sub_menu
		  ----> buat nama nya 
		     -> user_access_menu => utk memberitahu user yg role nya apa boleh kases menu yang mana saja
			     --->  misalnya => member --> hanya boleh akses menu user
				                   admin  ---> boleh akses menu user dan admin
             -> isi tabel yang baru itu :
			    1. id
				2. role_id -> foreign key dari tabel user_role
				2. menu_id -> ngambil dari tabel user_menu
				           -> misal => user role nya 1 => admin ----> bisa akses menu id 1 dan menu id 2 (menu admin dan user)
			 -> insert ke databate utk admin 2 colom
			    1. '','1','1' => artinya role_idnya = 1 (admin), boleh akses menu_id = 1 (menu admin)
			    2. '','1','2' => artinya role_idnya = 1 (admin), boleh akses menu_id = 2 (menu user)
				
			 -> insert ke databate utk user 1 colom -> karna user hanya bisa akses 1 menu_id
				1. '','2','2' => artinya role_idnya = 2 (member), boleh akses menu_id = 1 (menu user)
				
		=> kembali ke codingannya
		    -> perbaiki bagian sidebar.php ==> <!---- query menu ---> ====> melakukan join dari ketiga tabel(user_menu, user_role, user_sub_menu)
			contoh : SELECT column-names
					  FROM table-name1 
					  JOIN table-name2 ON column-name1 = column-name2
					 WHERE condition
			   => Artinya -> select colom yang mana yang ingin ditampilkan ,dari tabel 1 ke tabel 2, 
			              "on" menunci primary key dari masing* tabelnya lalu "where" -> kondisi
							  <?php 
						$role_id = $this->session->userdata('role_id');
						$queryMenu = "SELECT `user_menu`.`id`, `menu`
										FROM `user_menu` JOIN `user_access_menu`
									  ON `user_menu`.`id` = `user_access_menu`.`menu_id`
									 WHERE `user_access_menu`.`role_id` = $role_id
									 ORDER BY `user_access_menu`.`menu_id` ASC
									 ";
						$menu = $this->db->query($queryMenu)->result_array();
						var_dump($menu);
						die;
						
						
						?>
						
		=> tambahkan sub menu baru nya ---> insert di database
		    insert into user_submenu values('', '2', 'Edit Profile', 'user/edit', 'fas fa-fw fa-user-edit', '1');
			
			
	Menu Management part 2
	    => insert data menu baru di tabel user_menu ----> insert into user_menu values('', 'Menu');
		
		--------> INGAT! setiap membuat menu baru maka kita harus buat controller baru terkait dgn menu itu <------------
		
		=> insert data user_access_menu
		    MariaDB [mid_login]> insert into user_access_menu values(
								-> '',
								-> '1',
								-> '3');
			    ARTINYA ---> role_id 1 (admin) bisa mengakses menu_id 3 (menu)
		
		=> buat sub menunya buat controler baru
		   -> buat file baru di controllers 'Menu.php'
              -> isinya copy semua dari controler admin kecuali ubah titlenya 'Menu Management'
		   -> buat view menu nya --> isinya copy dari view index adminnya => agar kosong
		   
		   -> buat agar kita tau posisi kita lagi ada dimana => view templates -> sidebar -> bagian sub menu
		   -> tambahkan tabel utk menampilkan semua menu di view index menu
		   
		   
	pengelolaan sub menu
	=> controler menu ---> buat method baru 'subMenu'
	=> insert data baru ke dalam tabel user_sub_menu
	
	
	
	Part 8 USER ACCESS
	  => Buka salah satu controler misal controller admin
	  => buat helper sendiri => is_logged_in(); ---> mengetahui siapa yg berhak mengakses menu yng terkait
	     -> buka -> helpers -> buat file baru didlm nya -> mid_helper.php
		 -> tambahkan di autoload.php ==> masukan kesni -> $autoload['helper'] = array('url', 'file', 'security', 'mid');
	  => buat di controler auth fungsi/method baru -> blocked.php ==? lalu buat view nya di auth
	  
	
	Part 9 ACCESS MANAGEMENT
	 => Tambahkan subMenu baru -> namanya Role
	 => buka controler admin -> tambahkan 1 method baru
	 => lalu buat file baru di view admin -> role.php -> copy semua view menu 'index.php' karna sama isinya => lalu edit beberapa
	 => lalu bikin method 'roleaccess' pada controler admin
	 
	 => mengceklis menu apa yang sesuai dgn jabatanya / admin atau member ===> ajax ==> dilakukan di templates/footer.php
	 
	 Part 10 Edit Profile
	  => controler user -> method baru 'edit()'
	  
	 Part 11 ChangePassword
	  => add sub baru
	  
	  
	  Tips
	=> addsubmenu baru => method baru => view nya
	
	Part 12 USER ACTIVATION -> 
	=> buat akun gmail baru => karna dianggap tidak aman
	=> lakukan konfigurasi akun gmail tersebut
	
	=> masuk ke controler auth ---> method registration ==> ganti $data['is_active' => 0]
	
    
	Part 13 FORGOT PASSWORD
	=> Buat method baru forgotPassword()
	=> buka view login dan registration yang ada di views/auth => tambahkan di href forgot password href="<?= base_url('auth/forgotpassword'); ?>" di kedua view tersebut
	
	
           			  
		
		
	 
	   
	
			
	
	
			 
	